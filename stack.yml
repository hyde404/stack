---
heat_template_version: 2015-10-15

description: Create a stack for Jenkins masters and slaves.

parameters:
  flavor:
    type: string
    label: Instance Type
    description: Type of instance (flavor) to be used.
    default: Small_Linux 
  image:
    type: string
    label: Image ID
    description: Image to be used for compute instance.
    default: cirros-0.3.4-x86_64-disk
  key_name:
    type: string
    label: Key Name
    description: Name of key-pair to be used for compute instance.
    default: mykey
    constraints:
      - custom_constraint: nova.keypair
  public_network:
    type: string
    description: The network for the VM.
    default: external
  nameservers:
    type: comma_delimited_list
    description: The DNS the VM is going to use.
    default: [ '8.8.8.8' ]
  volume_size:
    type: number
    description: Size of the attached volume.
    default: 5

  group_name:
    type: string
    description: Stack name in Nova / Horizon
    default: group
  compute_metadata:
    type: json
    label: Metadata
  controller_metadata:
    type: json
    label: Metadata
  bastion_metadata:
    type: json
    label: Metadata
  compute_group_size:
    type: number
    description: Define the number of master servers in the group.
    default: 2
  controller_group_size:
    type: number
    description: Define the number of slave servers in the group.
    default: 2
  bastion_group_size:
    type: number
    description: Define the number of slave servers in the group.
    default: 1

  private_net_name:
    type: string
    description: Name of private network to be created
    default: internal
  private_net_cidr:
    type: string
    description: Private network address (CIDR notation)
    default: 10.0.69.0/29
  private_net_gateway:
    type: string
    description: Private network gateway address
    default: 10.0.69.1
  private_net_pool_start:
    type: string
    description: Start of private network IP address allocation pool
    default: 10.0.69.2
  private_net_pool_end:
    type: string
    description: End of private network IP address allocation pool
    default: 10.0.69.6

  hypadmin_network_gateway:
    type: string
    default: 10.0.0.254
  hypadmin_network_name:
    type: string
    default: hypadmin_network
  hypadmin_network_cidr:
    type: string
    default: 10.0.2.0/24

  external:
    type: string

resources:
  stack_private_net:
    type: OS::Neutron::Net
    properties:
      name: { get_param: private_net_name }

  stack_private_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: stack_private_net }
      cidr: { get_param: private_net_cidr }
      gateway_ip: { get_param: private_net_gateway }
      dns_nameservers: { get_param: nameservers }

      allocation_pools:
        - start: { get_param: private_net_pool_start }
          end: { get_param: private_net_pool_end }

  hypadmin_network:
    type: OS::Stack::Hypadmin
    properties:
      hypadmin_network: { get_param: hypadmin_network_name }
      hypadmin_network_cidr: { get_param: hypadmin_network_cidr }
      hypadmin_network_gateway: { get_param: hypadmin_network_gateway }

  stack_router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_network }

  stack_router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: stack_router }
      subnet_id: { get_resource: stack_private_subnet }

  compute_group:
    type: OS::Heat::ResourceGroup
    #depends_on: stack_router_interface
    properties:
      count: { get_param: compute_group_size }
      resource_def:
        type: OS::Stack::Server
        properties:
          name: compute-%index%
          flavor: { get_param: flavor }
          image: { get_param: image }
          key_name: { get_param: key_name }
          private_network: { get_resource: stack_private_net }
          public_network: { get_param: public_network }
          volume_size: { get_param: volume_size }
          server_data: { get_param: compute_metadata }

  controller_group:
    type: OS::Heat::ResourceGroup
    #depends_on: stack_router_interface
    properties:
      count: { get_param: controller_group_size }
      resource_def:
        type: OS::Stack::Server
        properties:
          name: controller-%index%
          flavor: { get_param: flavor }
          image: { get_param: image }
          key_name: { get_param: key_name }
          private_network: { get_resource: stack_private_net }
          public_network: { get_param: public_network }
          volume_size: { get_param: volume_size }
          server_data: { get_param: controller_metadata }

  bastion:
    type: OS::Heat::ResourceGroup
    #depends_on: stack_router_interface
    properties:
      count: { get_param: bastion_group_size }
      resource_def:
        type: OS::Stack::Server
        properties:
          name: bastion-%index%
          flavor: { get_param: flavor }
          image: { get_param: image }
          key_name: { get_param: key_name }
          private_network: { get_resource: stack_private_net }
          hypadmin_network: { get_resource: hypadmin_network }
          public_network: { get_param: public_network }
          volume_size: { get_param: volume_size }
          server_data: { get_param: bastion_metadata }
