---
heat_template_version: 2015-10-15

description: >
  This template will create a Cinder volume, attach it to a Nova instance and
  configure the Neutron for it.

parameters:
  availability_zone:
    type: string
    description: The Availability Zone to create the volume.
    default: nova
  flavor:
    type: string
    label: Instance Type
    description: Type of instance (flavor) to be used.
    default: m1.tiny
  image:
    type: string
    label: Image ID
    description: Image to be used for compute instance.
  key_name:
    type: string
    label: Key Name
    description: Name of key-pair to be used for compute instance.
    constraints:
      - custom_constraint: nova.keypair
  server_data:
    type: json
    label: Metadata
    description: Metadata for the VM.
  name:
    type: string
    label: Instance name
    description: The compute instance name
  private_network:
    type: string
    description: The private network for the VM.
  public_network:
    type: string
    description: The public network for the VM.
  volume_size:
    type: string
    description: Size of the attached volume.
    default: 5

resources:
  instance_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Add security group rules for server
      name: security-group-custom
      rules:
        - protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
        - protocol: udp
          remote_ip_prefix: 0.0.0.0/0
        - protocol: icmp
          remote_ip_prefix: 0.0.0.0/0

  instance_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_network }
      security_groups: [{ get_resource: instance_security_group }]

  instance_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_network }

  instance_associate_floating_ip:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: instance_floating_ip }
      port_id: { get_resource: instance_port }

  instance_volume:
    type: OS::Cinder::Volume
    properties:
      availability_zone: { get_param: availability_zone }
      size: { get_param: volume_size }

  instance_compute:
    type: OS::Nova::Server
    properties:
      image:    { get_param: image }
      flavor:   { get_param: flavor }
      key_name: { get_param: key_name }
      metadata: { get_param: server_data }
      name:     { get_param: name }
      networks:
        - port: { get_resource: instance_port }

  instance_volume_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: instance_compute }
      volume_id: { get_resource: instance_volume }
      mountpoint: /dev/sdb

outputs:
  private_ip:
    description: IP address of instance in private network
    value: { get_attr: [ instance_compute, first_address ] }
  #public_ip:
  #  description: Floating IP address of instance in public network
  #  value: { get_attr: [ instance_floating_ip, floating_ip_address ] }
